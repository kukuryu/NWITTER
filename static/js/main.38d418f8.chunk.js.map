{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","addScope","signInWithPopup","then","result","credential","accessToken","user","catch","errorCode","code","alert","console","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","toggleEditing","doc","id","update","attachmentUrl","src","width","height","nweet","window","confirm","delete","refFromURL","NweetFactory","userObj","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","currentTarget","readAsDataURL","alt","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","data","index","key","Profile","refreshUser","displayName","newDisplayName","setNewDisplayName","updateProfile","getMyNweets","where","orderBy","get","signOut","Navigation","to","AppRouter","isLoggedIn","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","str","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.38d418f8.chunk.js","sourcesContent":["// import { initializeApp } from \"firebase/app\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN ,\r\n    projectId: process.env.REACT_APP_PROJECT_ID ,\r\n    storageBucket: process.env.REACT_APP_SOTRAGE_BUCKET ,\r\n    messagingSenderId: process.env.REACT_APP_MESSGING_SENDER_ID ,\r\n    appId: process.env.REACT_APP_APP_ID ,\r\n  };\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React from 'react';\r\nimport { authService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () =>{\r\n    const [email,setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target:{name,value},\r\n        } = event;\r\n\r\n        if  (name === \"이멜\"){\r\n            setEmail(value);\r\n        }else if (name === \"암호\"){\r\n            setPassword(value);\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try{\r\n            let data;\r\n            if(newAccount){\r\n                //create New\r\n                data = await authService.createUserWithEmailAndPassword(email,password);\r\n            }else{\r\n                //login\r\n                data = await authService.signInWithEmailAndPassword(email,password);\r\n            }\r\n        }\r\n        catch(error){\r\n            setError(error.message);\r\n        }\r\n    }\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input name=\"이멜\" type=\"email\" placeholder=\"Email\" value={email} onChange={onChange} required/>\r\n                <input name=\"암호\" type=\"password\" placeholder=\"Password\" value={password} onChange={onChange} required/>\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"}/>\r\n                {error}\r\n            </form>\r\n            <span onClick={toggleAccount}>\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>        \r\n        </>\r\n    )\r\n}\r\nexport default AuthForm;","import React from 'react';\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { authService,firebaseInstance } from \"fbase\";\r\n\r\nconst Auth = () =>{\r\n  \r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target:{name},\r\n        } = event;\r\n\r\n        let provider;\r\n\r\n        if  (name === \"Google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }else if (name === \"Github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n            provider.addScope('repo');\r\n        }\r\n\r\n        const data = await authService.signInWithPopup(provider).then(function(result) {\r\n            // This gives you a GitHub Access Token.\r\n            var token = result.credential.accessToken;\r\n            // The signed-in user info.\r\n            var user = result.user;\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            // The email of the user's account used.\r\n            var email = error.email;\r\n            // The firebase.auth.AuthCredential type that was used.\r\n            var credential = error.credential;\r\n            if (errorCode === 'auth/account-exists-with-different-credential') {\r\n              alert('You have signed up with a different provider for that email.');\r\n              // Handle linking here if your app allows it.\r\n            } else {\r\n              console.error(error);\r\n            }\r\n          });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AuthForm/>\r\n            <div>\r\n                <button name=\"Google\" onClick={onSocialClick}>Continue with Google</button>\r\n                <button name=\"Github\" onClick={onSocialClick}>Continue with Github</button>\r\n            </div>\r\n        \r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Auth;","import React from 'react';\r\nimport { dbService,storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst Nweet = ({ nweetObj,isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n\r\n    const onDeleteClick = (nweet) =>{\r\n        const ok = window.confirm(\"삭제?\");\r\n        if(ok){\r\n            dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            if(nweetObj.attachmentUrl !== \"\")\r\n            {\r\n                storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const toggleEditing = () => {\r\n        setEditing((prev) => !prev)\r\n        if(!editing){\r\n            setNewNweet(nweetObj.text);\r\n        }\r\n    };\r\n\r\n    const onChange = (event) =>{\r\n        const {\r\n            target: {value}\r\n        } = event;\r\n        setNewNweet(value);\r\n    }\r\n\r\n    const onSubmit = async (event) =>  {\r\n        // event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({text : newNweet});\r\n        setEditing(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                editing ? (\r\n                    <>\r\n                    <form>\r\n                        <input onChange={onChange} value={newNweet} required></input>\r\n                        <button onClick={onSubmit}>Submit</button>\r\n                    </form>\r\n                    <button onClick={toggleEditing}>Cancle</button>\r\n                    </>  \r\n                )\r\n                :\r\n                (\r\n                    <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {\r\n                        nweetObj.attachmentUrl && (\r\n                            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\"></img>\r\n                        )\r\n                    }\r\n                    {\r\n                        isOwner && (\r\n                            <>\r\n                                <button onClick={onDeleteClick}>Delete Nweet</button>\r\n                                <button onClick={toggleEditing}>Edit Nweet</button>\r\n                            </>\r\n                        )\r\n                    }\r\n                    </>\r\n\r\n                )\r\n            }\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import React from 'react';\r\nimport {  useState } from \"react\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport { dbService, storageService } from \"fbase\";\r\n\r\n\r\nconst NweetFactory = ({userObj}) => {;\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            target: {value}\r\n        } = event;\r\n        setNweet(value);\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment,\"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }  \r\n\r\n        await dbService.collection(\"nweets\").add({\r\n            text:nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl: attachmentUrl\r\n        });\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    }\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target : {files}\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n\r\n    const onClearAttachment =() => setAttachment(\"\");\r\n\r\n    return (\r\n        <form>\r\n                    <input\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                    />\r\n                    <input type=\"file\"  accept=\"image/*\" onChange={onFileChange}/>\r\n                    <input type=\"submit\" onClick={onSubmit} value=\"Nweet\"/>\r\n                    {attachment && \r\n                    (\r\n                        <>\r\n                            <img src={attachment} width=\"50px\" height=\"50px\" alt=\"aa\"/> \r\n                            <button onClick={onClearAttachment}>Clear</button>\r\n                        </>\r\n                    )}\r\n                </form>\r\n    );\r\n}\r\nexport default NweetFactory;","import React from 'react';\r\nimport { dbService} from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({userObj}) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n            const newArray = snapshot.docs.map((document) => ({\r\n                id: document.id,\r\n                ...document.data(),\r\n            }));\r\n            setNweets(newArray);\r\n        })\r\n    },[]);\r\n\r\n    return (\r\n        <>\r\n            <NweetFactory userObj={userObj}></NweetFactory>\r\n            <div>\r\n                {\r\n                    nweets.map((nweet,index) => (\r\n                        <Nweet key={index} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid}></Nweet>\r\n                    )\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport Nweet from \"components/Nweet\";\r\nimport { authService,dbService } from \"fbase\";\r\nimport { useEffect,useState } from \"react\";\r\n\r\nconst Profile = ({userObj,refreshUser}) => {\r\n    const [nweets, setNweets] = useState([]);\r\n    const [newDisplayName,setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        // history.push(\"/\");\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target:{value}\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n            await userObj.updateProfile({displayName: newDisplayName});\r\n            refreshUser();\r\n        }\r\n\r\n    }\r\n\r\n    const getMyNweets = async () => {\r\n        const nweets = await dbService.collection(\"nweets\")\r\n        .where(\"creatorId\",\"==\",userObj.uid)\r\n        .orderBy(\"createdAt\",\"asc\")\r\n        .get();\r\n        \r\n        setNweets(nweets.docs.map((doc) => doc.data()));\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMyNweets();\r\n    },[]);\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input type=\"text\" onChange={onChange} placeholder=\"Display Name\"/>\r\n                <input type=\"submit\" value=\"Update Profile\"/>\r\n            </form>\r\n            <button onClick={onLogOutClick}>Log Out</button>\r\n        {\r\n            nweets.map((nweet,index) => (\r\n                <Nweet key={index} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid}></Nweet>\r\n            )\r\n            )\r\n        }\r\n        </>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({userObj}) => {\r\n    // return <nav>This is Navigation!</nav>\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n\r\n};\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport {HashRouter as Router, Redirect, Route, Switch} from \"react-router-dom\"\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({isLoggedIn, userObj,refreshUser}) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}></Navigation>}\r\n            <Switch>\r\n                {\r\n                    isLoggedIn ? (\r\n                        <>\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj}/>\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile refreshUser={refreshUser} userObj={userObj}/>\r\n                        </Route>\r\n                        </>\r\n                    )\r\n                    :\r\n                    (\r\n                        <Route exact path=\"/\">\r\n                            <Auth/>\r\n                        </Route>\r\n                    )\r\n                }\r\n                <Redirect from=\"*\" to=\"/\"></Redirect>\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React from 'react';\nimport { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport {authService} from \"../fbase\";\n// import AppRouter from \"./Router\";\n\nfunction App() {\n  const [init,setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => \n    {\n      if(user){\n        //setISLoggedIn(user);\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (str) => user.updateProfile(str)\n        });\n      }else{\n        setUserObj(false);\n      }\n\n      setInit(true);\n    }\n    );\n\n  },[]);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (str) => user.updateProfile(str)\n    })\n  }\n\n  return (\n    <>\n    {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj}/> : \"initializing...\"}\n    {/* <footer>&copy; {new Date().getFullYear()} Nwitter</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n// import firebase from \"./firebase\";\n\n// console.log(firebase);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}