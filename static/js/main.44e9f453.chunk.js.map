{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","addScope","signInWithPopup","then","result","credential","accessToken","user","catch","errorCode","code","alert","console","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","toggleEditing","doc","id","update","autoFocus","attachmentUrl","src","width","height","nweet","window","confirm","delete","refFromURL","faTrash","faPencilAlt","NweetFactory","userObj","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","data","marginTop","index","key","Profile","refreshUser","displayName","newDisplayName","setNewDisplayName","updateProfile","getMyNweets","where","orderBy","get","onclick","signOut","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","str","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.44e9f453.chunk.js","sourcesContent":["// import { initializeApp } from \"firebase/app\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN ,\r\n    projectId: process.env.REACT_APP_PROJECT_ID ,\r\n    storageBucket: process.env.REACT_APP_SOTRAGE_BUCKET ,\r\n    messagingSenderId: process.env.REACT_APP_MESSGING_SENDER_ID ,\r\n    appId: process.env.REACT_APP_APP_ID ,\r\n  };\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React from 'react';\r\nimport { authService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () =>{\r\n    const [email,setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target:{name,value},\r\n        } = event;\r\n\r\n        if  (name === \"이멜\"){\r\n            setEmail(value);\r\n        }else if (name === \"암호\"){\r\n            setPassword(value);\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try{\r\n            let data;\r\n            if(newAccount){\r\n                //create New\r\n                data = await authService.createUserWithEmailAndPassword(email,password);\r\n            }else{\r\n                //login\r\n                data = await authService.signInWithEmailAndPassword(email,password);\r\n            }\r\n        }\r\n        catch(error){\r\n            setError(error.message);\r\n        }\r\n    }\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input className=\"authInput\" name=\"이멜\" type=\"email\" placeholder=\"Email\" value={email} onChange={onChange} required/>\r\n                <input className=\"authInput\" name=\"암호\" type=\"password\" placeholder=\"Password\" value={password} onChange={onChange} required/>\r\n                <input className=\"authInput authSubmit\" type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"}/>\r\n                {error && <span className=\"authError\"></span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>        \r\n        </>\r\n    )\r\n}\r\nexport default AuthForm;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter,faGoogle,faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport React from 'react';\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { authService,firebaseInstance } from \"fbase\";\r\n\r\nconst Auth = () =>{\r\n  \r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target:{name},\r\n        } = event;\r\n\r\n        let provider;\r\n\r\n        if  (name === \"Google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }else if (name === \"Github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n            provider.addScope('repo');\r\n        }\r\n\r\n        const data = await authService.signInWithPopup(provider).then(function(result) {\r\n            // This gives you a GitHub Access Token.\r\n            var token = result.credential.accessToken;\r\n            // The signed-in user info.\r\n            var user = result.user;\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            // The email of the user's account used.\r\n            var email = error.email;\r\n            // The firebase.auth.AuthCredential type that was used.\r\n            var credential = error.credential;\r\n            if (errorCode === 'auth/account-exists-with-different-credential') {\r\n              alert('You have signed up with a different provider for that email.');\r\n              // Handle linking here if your app allows it.\r\n            } else {\r\n              console.error(error);\r\n            }\r\n          });\r\n    };\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"3x\" style={{marginBottom: 30}} />\r\n            <AuthForm/>\r\n            <div className=\"authBtns\">\r\n                <button className=\"authBtn\" name=\"Google\" onClick={onSocialClick}>Continue with Google <FontAwesomeIcon icon={faGoogle}/></button>\r\n                <button className=\"authBtn\" name=\"Github\" onClick={onSocialClick}>Continue with Github <FontAwesomeIcon icon={faGithub}/></button>\r\n            </div>\r\n        \r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Auth;","import React from 'react';\r\nimport { dbService,storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Nweet = ({ nweetObj,isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n\r\n    const onDeleteClick = (nweet) =>{\r\n        const ok = window.confirm(\"삭제?\");\r\n        if(ok){\r\n            dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            if(nweetObj.attachmentUrl !== \"\")\r\n            {\r\n                storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const toggleEditing = () => {\r\n        setEditing((prev) => !prev)\r\n        if(!editing){\r\n            setNewNweet(nweetObj.text);\r\n        }\r\n    };\r\n\r\n    const onChange = (event) =>{\r\n        const {\r\n            target: {value}\r\n        } = event;\r\n        setNewNweet(value);\r\n    }\r\n\r\n    const onSubmit = async (event) =>  {\r\n        // event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({text : newNweet});\r\n        setEditing(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {\r\n                editing ? (\r\n                    <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input onChange={onChange} value={newNweet} required placeholder=\"Edit your nweet\" autoFocus className=\"formInput\"></input>\r\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                    </form>\r\n                    <button onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancle</button>\r\n                    </>  \r\n                )\r\n                :\r\n                (\r\n                    <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {\r\n                        nweetObj.attachmentUrl && (\r\n                            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\"></img>\r\n                        )\r\n                    }\r\n                    {\r\n                        isOwner && (\r\n                            <div className=\"nweet__actions\">\r\n                                <span onClick={onDeleteClick}>\r\n                                    <FontAwesomeIcon icon={faTrash}/>\r\n                                </span>\r\n                                <span onClick={toggleEditing}>\r\n                                    <FontAwesomeIcon icon={faPencilAlt}/>\r\n                                </span>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    </>\r\n\r\n                )\r\n            }\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import React from 'react';\r\nimport {  useState } from \"react\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst NweetFactory = ({userObj}) => {;\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            target: {value}\r\n        } = event;\r\n        setNweet(value);\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(nweet === \"\"){\r\n\r\n        }\r\n\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment,\"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }  \r\n\r\n        await dbService.collection(\"nweets\").add({\r\n            text:nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl: attachmentUrl\r\n        });\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    }\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target : {files}\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n\r\n    const onClearAttachment =() => setAttachment(\"\");\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                    <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                    />\r\n                    <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\"/>\r\n            </div>\r\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>\r\n            </label>\r\n            <input id=\"attach-file\" type=\"file\"  accept=\"image/*\" onChange={onFileChange} style={{opacity:0}}/>\r\n\r\n                    {attachment && \r\n                    (\r\n                        <div className=\"factoryForm__attachment\">\r\n                            <img src={attachment} style={{backgroundImage: attachment}}/> \r\n\r\n                            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                                <span>Remove</span>\r\n                                <FontAwesomeIcon icon={faTimes}></FontAwesomeIcon>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n        </form>\r\n    );\r\n}\r\nexport default NweetFactory;","import React from 'react';\r\nimport { dbService} from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({userObj}) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n            const newArray = snapshot.docs.map((document) => ({\r\n                id: document.id,\r\n                ...document.data(),\r\n            }));\r\n            setNweets(newArray);\r\n        })\r\n    },[]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj}></NweetFactory>\r\n            <div style={{ marginTop: 30 }}>\r\n                {\r\n                    nweets.map((nweet,index) => (\r\n                        <Nweet key={index} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid}></Nweet>\r\n                    )\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport Nweet from \"components/Nweet\";\r\nimport { authService,dbService } from \"fbase\";\r\nimport { useEffect,useState } from \"react\";\r\n\r\nconst Profile = ({userObj,refreshUser}) => {\r\n    const [nweets, setNweets] = useState([]);\r\n    const [newDisplayName,setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        // history.push(\"/\");\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target:{value}\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n            await userObj.updateProfile({displayName: newDisplayName});\r\n            refreshUser();\r\n        }\r\n\r\n    }\r\n\r\n    const getMyNweets = async () => {\r\n        const nweets = await dbService.collection(\"nweets\")\r\n        .where(\"creatorId\",\"==\",userObj.uid)\r\n        .orderBy(\"createdAt\",\"asc\")\r\n        .get();\r\n        \r\n        setNweets(nweets.docs.map((doc) => doc.data()));\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMyNweets();\r\n    },[]);\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input type=\"text\" onChange={onChange} placeholder=\"Display Name\" autoFocus className=\"formInput\"/>\r\n                <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" style={{marginTop:10}}/>\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onclick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        {/* {\r\n            nweets.map((nweet,index) => (\r\n                <Nweet key={index} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid}></Nweet>\r\n            )\r\n            )\r\n        } */}\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Navigation = ({userObj}) => {\r\n    return (\r\n        <nav>\r\n            <ul style={{display:\"flex\", justifyContent: \"center\", marginTop: 50}}>\r\n                <li>\r\n                    <Link to=\"/\" style={{marginRight:10}}>\r\n                        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\"></FontAwesomeIcon>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\" style={{marginLeft: 10, display: \"flex\", flexDirection: \"column\", alignItems:\"center\", fontSize: 12}}>\r\n                        <FontAwesomeIcon icon={faUser} color={\"#04AAFD\"} size=\"5x\" ></FontAwesomeIcon>\r\n                        <span style={{marginTop:100}}>\r\n                            { userObj.displayName ? `${userObj.displayName}의 Profile` : \"Profile\"}\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n\r\n};\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport {HashRouter as Router, Redirect, Route, Switch} from \"react-router-dom\"\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({isLoggedIn, userObj,refreshUser}) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}></Navigation>}\r\n            <Switch>\r\n                {\r\n                    isLoggedIn ? (\r\n                        <div style={{ \r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\"\r\n                        }}>\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj}/>\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile refreshUser={refreshUser} userObj={userObj}/>\r\n                        </Route>\r\n                        </div>\r\n                    )\r\n                    :\r\n                    (\r\n                        <Route exact path=\"/\">\r\n                            <Auth/>\r\n                        </Route>\r\n                    )\r\n                }\r\n                <Redirect from=\"*\" to=\"/\"></Redirect>\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React from 'react';\nimport { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport {authService} from \"../fbase\";\n// import AppRouter from \"./Router\";\n\nfunction App() {\n  const [init,setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => \n    {\n      if(user){\n        //setISLoggedIn(user);\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (str) => user.updateProfile(str)\n        });\n      }else{\n        setUserObj(false);\n      }\n\n      setInit(true);\n    }\n    );\n\n  },[]);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (str) => user.updateProfile(str)\n    })\n  }\n\n  return (\n    <>\n    {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj}/> : \"initializing...\"}\n    {/* <footer>&copy; {new Date().getFullYear()} Nwitter</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n// import firebase from \"./firebase\";\n\n// console.log(firebase);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}